{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer2 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const analyser = useRef(null);\n  const dataArray = useRef(null);\n  let animationController;\n  let lastDrawTime = 0;\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        analyser.current.fftSize = 2048;\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n        dataArray.current = new Float32Array(analyser.current.fftSize);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  // In Visualizer3.tsx\n\n  // ...\n\n  const workerRef = useRef(null);\n  const startWorker = () => {\n    if (workerRef.current) {\n      return;\n    }\n    const worker = new Worker(\"./visualizer-worker.ts\");\n    workerRef.current = worker;\n    worker.postMessage({\n      type: \"start\",\n      bufferLength: analyser.current.frequencyBinCount\n    });\n    worker.onmessage = event => {\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        return;\n      }\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      const {\n        dataArray\n      } = event.data;\n      const WIDTH = canvas.width;\n      const HEIGHT = canvas.height;\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"green\";\n      ctx.beginPath();\n      const sliceWidth = WIDTH * 1.0 / dataArray.length;\n      let x = 0;\n      let y = HEIGHT / 2;\n      for (let i = 0; i < dataArray.length; i++) {\n        const v = dataArray[i];\n        const val = v * 0.5;\n        const yOffset = val * HEIGHT;\n        y = HEIGHT / 2 + yOffset;\n        if (i === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n        x += sliceWidth;\n      }\n      ctx.stroke();\n      worker.postMessage({\n        type: \"draw\"\n      });\n    };\n  };\n  const stopWorker = () => {\n    if (!workerRef.current) {\n      return;\n    }\n    workerRef.current.postMessage({\n      type: \"stop\"\n    });\n    workerRef.current.terminate();\n    workerRef.current = null;\n  };\n\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAudioPlay,\n      children: \"begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWorker,\n      children: \"start worker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer2, \"cBy5KSE5mU6Fx1ttOTcRBmM4puM=\");\n_c = Visualizer2;\nexport default Visualizer2;\nvar _c;\n$RefreshReg$(_c, \"Visualizer2\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer2","_s","canvasRef","analyser","dataArray","animationController","lastDrawTime","handleAudioPlay","audioContext","AudioContext","current","stream","navigator","mediaDevices","getUserMedia","audio","audioSrc","createMediaStreamSource","createAnalyser","fftSize","connect","destination","Float32Array","error","console","visualizeData","workerRef","startWorker","worker","Worker","postMessage","type","bufferLength","frequencyBinCount","onmessage","event","canvas","ctx","getContext","data","WIDTH","width","HEIGHT","height","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","length","x","y","i","v","val","yOffset","moveTo","lineTo","stroke","stopWorker","terminate","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer2: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n  const dataArray = useRef<Float32Array | null>(null);\n\n  let animationController: number | null;\n  let lastDrawTime = 0;\n\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        analyser.current.fftSize = 2048;\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n        dataArray.current = new Float32Array(analyser.current.fftSize);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  // In Visualizer3.tsx\n\n// ...\n\nconst workerRef = useRef<Worker | null>(null);\n\nconst startWorker = () => {\n  if (workerRef.current) {\n    return;\n  }\n  const worker = new Worker(\"./visualizer-worker.ts\");\n  workerRef.current = worker;\n  worker.postMessage({ type: \"start\", bufferLength: analyser.current.frequencyBinCount });\n  worker.onmessage = (event) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const { dataArray } = event.data;\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = (WIDTH * 1.0) / dataArray.length;\n    let x = 0;\n    let y = HEIGHT / 2;\n    for (let i = 0; i < dataArray.length; i++) {\n      const v = dataArray[i];\n      const val = v * 0.5;\n      const yOffset = val * HEIGHT;\n      y = HEIGHT / 2 + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n    worker.postMessage({ type: \"draw\" });\n  };\n};\n\nconst stopWorker = () => {\n  if (!workerRef.current) {\n    return;\n  }\n  workerRef.current.postMessage({ type: \"stop\" });\n  workerRef.current.terminate();\n  workerRef.current = null;\n};\n\n// ...\n\n\n  return (\n    <>\n      <button onClick={handleAudioPlay}>begin</button>\n      <button onClick={startWorker}>start worker</button>\n      <canvas ref={canvasRef} width={500} height={500} />\n    </>\n  );\n};\n\nexport default Visualizer2;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAErC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,SAAS,GAAGP,MAAM,CAA2B,IAAI,CAAC;EACxD,MAAMQ,QAAQ,GAAGR,MAAM,CAAsB,IAAI,CAAC;EAClD,MAAMS,SAAS,GAAGT,MAAM,CAAsB,IAAI,CAAC;EAEnD,IAAIU,mBAAkC;EACtC,IAAIC,YAAY,GAAG,CAAC;EAEpB,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,YAAY,GAAG,IAAIC,YAAY,EAAE;IACvC,IAAI,CAACN,QAAQ,CAACO,OAAO,EAAE;MACrB,IAAI;QACF;QACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,MAAMC,QAAQ,GAAGR,YAAY,CAACS,uBAAuB,CAACN,MAAM,CAAC;QAC7DR,QAAQ,CAACO,OAAO,GAAGF,YAAY,CAACU,cAAc,EAAE;QAChDf,QAAQ,CAACO,OAAO,CAACS,OAAO,GAAG,IAAI;QAC/BH,QAAQ,CAACI,OAAO,CAACjB,QAAQ,CAACO,OAAO,CAAC;QAClCP,QAAQ,CAACO,OAAO,CAACU,OAAO,CAACZ,YAAY,CAACa,WAAW,CAAC;QAClDjB,SAAS,CAACM,OAAO,GAAG,IAAIY,YAAY,CAACnB,QAAQ,CAACO,OAAO,CAACS,OAAO,CAAC;MAChE,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;IACAE,aAAa,EAAE;EACjB,CAAC;;EAED;;EAEF;;EAEA,MAAMC,SAAS,GAAG/B,MAAM,CAAgB,IAAI,CAAC;EAE7C,MAAMgC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAID,SAAS,CAAChB,OAAO,EAAE;MACrB;IACF;IACA,MAAMkB,MAAM,GAAG,IAAIC,MAAM,CAAC,wBAAwB,CAAC;IACnDH,SAAS,CAAChB,OAAO,GAAGkB,MAAM;IAC1BA,MAAM,CAACE,WAAW,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,YAAY,EAAE7B,QAAQ,CAACO,OAAO,CAACuB;IAAkB,CAAC,CAAC;IACvFL,MAAM,CAACM,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,MAAM,GAAGlC,SAAS,CAACQ,OAAO;MAChC,IAAI,CAAC0B,MAAM,EAAE;QACX;MACF;MACA,MAAMC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MACnC,IAAI,CAACD,GAAG,EAAE;QACR;MACF;MACA,MAAM;QAAEjC;MAAU,CAAC,GAAG+B,KAAK,CAACI,IAAI;MAChC,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAK;MAC1B,MAAMC,MAAM,GAAGN,MAAM,CAACO,MAAM;MAC5BN,GAAG,CAACO,SAAS,GAAG,OAAO;MACvBP,GAAG,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEL,KAAK,EAAEE,MAAM,CAAC;MACjCL,GAAG,CAACS,SAAS,GAAG,CAAC;MACjBT,GAAG,CAACU,WAAW,GAAG,OAAO;MACzBV,GAAG,CAACW,SAAS,EAAE;MACf,MAAMC,UAAU,GAAIT,KAAK,GAAG,GAAG,GAAIpC,SAAS,CAAC8C,MAAM;MACnD,IAAIC,CAAC,GAAG,CAAC;MACT,IAAIC,CAAC,GAAGV,MAAM,GAAG,CAAC;MAClB,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjD,SAAS,CAAC8C,MAAM,EAAEG,CAAC,EAAE,EAAE;QACzC,MAAMC,CAAC,GAAGlD,SAAS,CAACiD,CAAC,CAAC;QACtB,MAAME,GAAG,GAAGD,CAAC,GAAG,GAAG;QACnB,MAAME,OAAO,GAAGD,GAAG,GAAGb,MAAM;QAC5BU,CAAC,GAAGV,MAAM,GAAG,CAAC,GAAGc,OAAO;QACxB,IAAIH,CAAC,KAAK,CAAC,EAAE;UACXhB,GAAG,CAACoB,MAAM,CAACN,CAAC,EAAEC,CAAC,CAAC;QAClB,CAAC,MAAM;UACLf,GAAG,CAACqB,MAAM,CAACP,CAAC,EAAEC,CAAC,CAAC;QAClB;QACAD,CAAC,IAAIF,UAAU;MACjB;MACAZ,GAAG,CAACsB,MAAM,EAAE;MACZ/B,MAAM,CAACE,WAAW,CAAC;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;IACtC,CAAC;EACH,CAAC;EAED,MAAM6B,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAAClC,SAAS,CAAChB,OAAO,EAAE;MACtB;IACF;IACAgB,SAAS,CAAChB,OAAO,CAACoB,WAAW,CAAC;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC;IAC/CL,SAAS,CAAChB,OAAO,CAACmD,SAAS,EAAE;IAC7BnC,SAAS,CAAChB,OAAO,GAAG,IAAI;EAC1B,CAAC;;EAED;;EAGE,oBACEb,OAAA,CAAAE,SAAA;IAAA+D,QAAA,gBACEjE,OAAA;MAAQkE,OAAO,EAAExD,eAAgB;MAAAuD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAChDtE,OAAA;MAAQkE,OAAO,EAAEpC,WAAY;MAAAmC,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACnDtE,OAAA;MAAQuE,GAAG,EAAElE,SAAU;MAACuC,KAAK,EAAE,GAAI;MAACE,MAAM,EAAE;IAAI;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAClD;AAEP,CAAC;AAAClE,EAAA,CAhGID,WAAqB;AAAAqE,EAAA,GAArBrE,WAAqB;AAkG3B,eAAeA,WAAW;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}