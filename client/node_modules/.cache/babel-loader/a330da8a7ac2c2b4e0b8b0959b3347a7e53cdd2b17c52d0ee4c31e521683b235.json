{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioVisualizer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [audioContext, setAudioContext] = useState(null);\n  const [analyserNode, setAnalyserNode] = useState(null);\n  const [dataArray, setDataArray] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    const initAudio = async () => {\n      try {\n        const audioContext = window.AudioContext || window.webkitAudioContext;\n        const audioCTX = new audioContext();\n        const analyserNode = audioCTX.createAnalyser();\n        analyserNode.fftSize = 2048;\n        const bufferLength = analyserNode.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n        const source = audioCTX.createMediaStreamSource(await navigator.mediaDevices.getUserMedia({\n          audio: true\n        }));\n        source.connect(audioCTX.destination);\n        source.connect(analyserNode);\n        setAudioContext(audioCTX);\n        setAnalyserNode(analyserNode);\n        setDataArray(dataArray);\n        setIsDrawing(true);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    initAudio();\n  }, []);\n  const startAudioContext = async () => {\n    if (!audioContext) {\n      try {\n        const audioCTX = new AudioContext();\n        const analyserNode = audioCTX.createAnalyser();\n        analyserNode.fftSize = 2048;\n        const bufferLength = analyserNode.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const source = audioCTX.createMediaStreamSource(stream);\n        source.connect(analyserNode);\n        setAudioContext(audioCTX);\n        setAnalyserNode(analyserNode);\n        setDataArray(dataArray);\n        setIsDrawing(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (audioContext && analyserNode && dataArray && isDrawing) {\n      const canvas = canvasRef.current;\n      const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n      const draw = () => {\n        var _canvas$width, _canvas$height, _canvas$width2;\n        requestAnimationFrame(draw);\n        analyserNode.getByteTimeDomainData(dataArray);\n        ctx === null || ctx === void 0 ? void 0 : ctx.fillRect(0, 0, (_canvas$width = canvas === null || canvas === void 0 ? void 0 : canvas.width) !== null && _canvas$width !== void 0 ? _canvas$width : 0, (_canvas$height = canvas === null || canvas === void 0 ? void 0 : canvas.height) !== null && _canvas$height !== void 0 ? _canvas$height : 0);\n        ctx === null || ctx === void 0 ? void 0 : ctx.beginPath();\n        const sliceWidth = ((_canvas$width2 = canvas === null || canvas === void 0 ? void 0 : canvas.width) !== null && _canvas$width2 !== void 0 ? _canvas$width2 : 0) / dataArray.length;\n        let x = 0;\n        for (let i = 0; i < dataArray.length; i++) {\n          var _canvas$height2;\n          const v = dataArray[i] / 128.0;\n          const y = v * ((_canvas$height2 = canvas === null || canvas === void 0 ? void 0 : canvas.height) !== null && _canvas$height2 !== void 0 ? _canvas$height2 : 0) / 2;\n          if (i === 0) {\n            ctx === null || ctx === void 0 ? void 0 : ctx.moveTo(x, y);\n          } else {\n            ctx === null || ctx === void 0 ? void 0 : ctx.lineTo(x, y);\n          }\n          x += sliceWidth;\n        }\n        ctx === null || ctx === void 0 ? void 0 : ctx.stroke();\n      };\n      draw();\n    }\n  }, [audioContext, analyserNode, dataArray, isDrawing]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 600,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startAudioContext,\n      children: \"Start Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AudioVisualizer, \"53zw+QWz9wkMMwYqSTnIQIpADfI=\");\n_c = AudioVisualizer;\nexport default AudioVisualizer;\nvar _c;\n$RefreshReg$(_c, \"AudioVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioVisualizer","_s","canvasRef","audioContext","setAudioContext","analyserNode","setAnalyserNode","dataArray","setDataArray","isDrawing","setIsDrawing","initAudio","window","AudioContext","webkitAudioContext","audioCTX","createAnalyser","fftSize","bufferLength","frequencyBinCount","Uint8Array","source","createMediaStreamSource","navigator","mediaDevices","getUserMedia","audio","connect","destination","err","console","error","startAudioContext","stream","canvas","current","ctx","getContext","draw","_canvas$width","_canvas$height","_canvas$width2","requestAnimationFrame","getByteTimeDomainData","fillRect","width","height","beginPath","sliceWidth","length","x","i","_canvas$height2","v","y","moveTo","lineTo","stroke","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst AudioVisualizer: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [audioContext, setAudioContext] = useState<AudioContext | null>(null);\n  const [analyserNode, setAnalyserNode] = useState<AnalyserNode | null>(null);\n  const [dataArray, setDataArray] = useState<Uint8Array | null>(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  useEffect(() => {\n    const initAudio = async () => {\n      try {\n        const audioContext =\n          (window as any).AudioContext || (window as any).webkitAudioContext;\n        const audioCTX = new audioContext();\n        const analyserNode = audioCTX.createAnalyser();\n        analyserNode.fftSize = 2048;\n        const bufferLength = analyserNode.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n        const source = audioCTX.createMediaStreamSource(\n          await navigator.mediaDevices.getUserMedia({ audio: true })\n        );\n        source.connect(audioCTX.destination);\n        source.connect(analyserNode);\n\n        setAudioContext(audioCTX);\n        setAnalyserNode(analyserNode);\n        setDataArray(dataArray);\n        setIsDrawing(true);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    initAudio();\n  }, []);\n\n  const startAudioContext = async () => {\n    if (!audioContext) {\n      try {\n        const audioCTX = new AudioContext();\n        const analyserNode = audioCTX.createAnalyser();\n        analyserNode.fftSize = 2048;\n        const bufferLength = analyserNode.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n        });\n        const source = audioCTX.createMediaStreamSource(stream);\n        source.connect(analyserNode);\n\n        setAudioContext(audioCTX);\n        setAnalyserNode(analyserNode);\n        setDataArray(dataArray);\n        setIsDrawing(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (audioContext && analyserNode && dataArray && isDrawing) {\n      const canvas = canvasRef.current;\n      const ctx = canvas?.getContext(\"2d\");\n\n      const draw = () => {\n        requestAnimationFrame(draw);\n        analyserNode.getByteTimeDomainData(dataArray);\n        ctx?.fillRect(0, 0, canvas?.width ?? 0, canvas?.height ?? 0);\n        ctx?.beginPath();\n        const sliceWidth = (canvas?.width ?? 0) / dataArray.length;\n        let x = 0;\n        for (let i = 0; i < dataArray.length; i++) {\n          const v = dataArray[i] / 128.0;\n          const y = (v * (canvas?.height ?? 0)) / 2;\n          if (i === 0) {\n            ctx?.moveTo(x, y);\n          } else {\n            ctx?.lineTo(x, y);\n          }\n          x += sliceWidth;\n        }\n        ctx?.stroke();\n      };\n      draw();\n    }\n  }, [audioContext, analyserNode, dataArray, isDrawing]);\n\n  return (\n    <>\n      <canvas ref={canvasRef} width={600} height={300} />\n      <button onClick={startAudioContext}>Start Audio</button>\n    </>\n  );\n};\n\nexport default AudioVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}