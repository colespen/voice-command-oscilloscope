{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer3 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const analyser = useRef(null);\n  let animationController;\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current) {\n      return cancelAnimationFrame(animationController);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyser.current.getFloatTimeDomainData(dataArray);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = WIDTH * 1.0 / bufferLength;\n    let x = 0;\n    let y = HEIGHT / 2;\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i];\n      const val = v * 0.5;\n      const yOffset = val * HEIGHT;\n      y = HEIGHT / 2 + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n\n    // Step 2: Capture canvas as image\n    const image = canvas.toDataURL(\"image/png\");\n\n    // Step 3: Pass image to Tesseract.js worker\n    const worker = new createWorker();\n    (async () => {\n      await worker.load();\n      await worker.loadLanguage(\"eng\");\n      await worker.initialize(\"eng\");\n      const {\n        data: {\n          text\n        }\n      } = await worker.recognize(image);\n      console.log(text);\n      await worker.terminate();\n    })();\n  };\n  useEffect(() => {\n    return () => {\n      if (animationController) {\n        cancelAnimationFrame(animationController);\n      }\n    };\n  }, [animationController]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAudioPlay,\n      children: \"begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer3, \"JZkOrspyDN86SzK15nCmwsP9Ac4=\");\n_c = Visualizer3;\nexport default Visualizer3;\nvar _c;\n$RefreshReg$(_c, \"Visualizer3\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer3","_s","canvasRef","analyser","animationController","handleAudioPlay","audioContext","AudioContext","current","stream","navigator","mediaDevices","getUserMedia","audio","audioSrc","createMediaStreamSource","createAnalyser","connect","destination","error","console","visualizeData","window","requestAnimationFrame","cancelAnimationFrame","canvas","ctx","getContext","WIDTH","width","HEIGHT","height","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","y","i","v","val","yOffset","moveTo","lineTo","stroke","image","toDataURL","worker","createWorker","load","loadLanguage","initialize","data","text","recognize","log","terminate","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer3: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n\n  let animationController: number | null;\n\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current) {\n      return cancelAnimationFrame(animationController!);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyser.current.getFloatTimeDomainData(dataArray);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = (WIDTH * 1.0) / bufferLength;\n    let x = 0;\n    let y = HEIGHT / 2;\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i];\n      const val = v * 0.5;\n      const yOffset = val * HEIGHT;\n      y = HEIGHT / 2 + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n\n    // Step 2: Capture canvas as image\n    const image = canvas.toDataURL(\"image/png\");\n\n    // Step 3: Pass image to Tesseract.js worker\n    const worker =new createWorker();\n    (async () => {\n      await worker.load();\n      await worker.loadLanguage(\"eng\");\n      await worker.initialize(\"eng\");\n      const { data: { text } } = await worker.recognize(image);\n      console.log(text);\n      await worker.terminate();\n    })();\n  };\n\n  useEffect(() => {\n    return () => {\n      if (animationController) {\n        cancelAnimationFrame(animationController);\n      }\n    };\n  }, [animationController]);\n\n  return (\n    <>\n      <button onClick={handleAudioPlay}>begin</button>\n      <canvas ref={canvasRef} width={500} height={500} />\n    </>\n  );\n};\n\nexport default Visualizer3;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEhD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,SAAS,GAAGR,MAAM,CAA2B,IAAI,CAAC;EACxD,MAAMS,QAAQ,GAAGT,MAAM,CAAsB,IAAI,CAAC;EAElD,IAAIU,mBAAkC;EAEtC,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,YAAY,GAAG,IAAIC,YAAY,EAAE;IACvC,IAAI,CAACJ,QAAQ,CAACK,OAAO,EAAE;MACrB,IAAI;QACF;QACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,MAAMC,QAAQ,GAAGR,YAAY,CAACS,uBAAuB,CAACN,MAAM,CAAC;QAC7DN,QAAQ,CAACK,OAAO,GAAGF,YAAY,CAACU,cAAc,EAAE;QAChDF,QAAQ,CAACG,OAAO,CAACd,QAAQ,CAACK,OAAO,CAAC;QAClCL,QAAQ,CAACK,OAAO,CAACS,OAAO,CAACX,YAAY,CAACY,WAAW,CAAC;MACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;IACAE,aAAa,EAAE;EACjB,CAAC;EAED,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1BjB,mBAAmB,GAAGkB,MAAM,CAACC,qBAAqB,CAACF,aAAa,CAAC;IACjE,IAAI,CAAClB,QAAQ,CAACK,OAAO,EAAE;MACrB,OAAOgB,oBAAoB,CAACpB,mBAAmB,CAAE;IACnD;IACA,MAAMqB,MAAM,GAAGvB,SAAS,CAACM,OAAO;IAChC,IAAI,CAACiB,MAAM,EAAE;MACX;IACF;IACA,MAAMC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,IAAI,CAACD,GAAG,EAAE;MACR;IACF;IACA,MAAME,KAAK,GAAGH,MAAM,CAACI,KAAK;IAC1B,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAM;IAC5B,MAAMC,YAAY,GAAG7B,QAAQ,CAACK,OAAO,CAACyB,iBAAiB;IACvD,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAACH,YAAY,CAAC;IAChD7B,QAAQ,CAACK,OAAO,CAAC4B,sBAAsB,CAACF,SAAS,CAAC;IAClDR,GAAG,CAACW,SAAS,GAAG,OAAO;IACvBX,GAAG,CAACY,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEV,KAAK,EAAEE,MAAM,CAAC;IACjCJ,GAAG,CAACa,SAAS,GAAG,CAAC;IACjBb,GAAG,CAACc,WAAW,GAAG,OAAO;IACzBd,GAAG,CAACe,SAAS,EAAE;IACf,MAAMC,UAAU,GAAId,KAAK,GAAG,GAAG,GAAII,YAAY;IAC/C,IAAIW,CAAC,GAAG,CAAC;IACT,IAAIC,CAAC,GAAGd,MAAM,GAAG,CAAC;IAClB,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,YAAY,EAAEa,CAAC,EAAE,EAAE;MACrC,MAAMC,CAAC,GAAGZ,SAAS,CAACW,CAAC,CAAC;MACtB,MAAME,GAAG,GAAGD,CAAC,GAAG,GAAG;MACnB,MAAME,OAAO,GAAGD,GAAG,GAAGjB,MAAM;MAC5Bc,CAAC,GAAGd,MAAM,GAAG,CAAC,GAAGkB,OAAO;MACxB,IAAIH,CAAC,KAAK,CAAC,EAAE;QACXnB,GAAG,CAACuB,MAAM,CAACN,CAAC,EAAEC,CAAC,CAAC;MAClB,CAAC,MAAM;QACLlB,GAAG,CAACwB,MAAM,CAACP,CAAC,EAAEC,CAAC,CAAC;MAClB;MACAD,CAAC,IAAID,UAAU;IACjB;IACAhB,GAAG,CAACyB,MAAM,EAAE;;IAEZ;IACA,MAAMC,KAAK,GAAG3B,MAAM,CAAC4B,SAAS,CAAC,WAAW,CAAC;;IAE3C;IACA,MAAMC,MAAM,GAAE,IAAIC,YAAY,EAAE;IAChC,CAAC,YAAY;MACX,MAAMD,MAAM,CAACE,IAAI,EAAE;MACnB,MAAMF,MAAM,CAACG,YAAY,CAAC,KAAK,CAAC;MAChC,MAAMH,MAAM,CAACI,UAAU,CAAC,KAAK,CAAC;MAC9B,MAAM;QAAEC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAMN,MAAM,CAACO,SAAS,CAACT,KAAK,CAAC;MACxDhC,OAAO,CAAC0C,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMN,MAAM,CAACS,SAAS,EAAE;IAC1B,CAAC,GAAG;EACN,CAAC;EAEDpE,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIS,mBAAmB,EAAE;QACvBoB,oBAAoB,CAACpB,mBAAmB,CAAC;MAC3C;IACF,CAAC;EACH,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;EAEzB,oBACEP,OAAA,CAAAE,SAAA;IAAAiE,QAAA,gBACEnE,OAAA;MAAQoE,OAAO,EAAE5D,eAAgB;MAAA2D,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAChDxE,OAAA;MAAQyE,GAAG,EAAEpE,SAAU;MAAC2B,KAAK,EAAE,GAAI;MAACE,MAAM,EAAE;IAAI;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAClD;AAEP,CAAC;AAACpE,EAAA,CA5FID,WAAqB;AAAAuE,EAAA,GAArBvE,WAAqB;AA8F3B,eAAeA,WAAW;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}