{"ast":null,"code":"export function createAudioContext() {\n  return new AudioContext();\n}\nexport async function getAudioStream() {\n  return await navigator.mediaDevices.getUserMedia({\n    audio: true\n  });\n}\nexport function createAnalyzerNode(audioContext) {\n  const analyzer = audioContext.createAnalyser();\n  analyzer.fftSize = 2048;\n  analyzer.smoothingTimeConstant = 0.8;\n  return analyzer;\n}\nexport function connectAudioStream(audioSrc, analyzer, destination) {\n  audioSrc.connect(analyzer);\n  analyzer.connect(destination);\n}","map":{"version":3,"names":["createAudioContext","AudioContext","getAudioStream","navigator","mediaDevices","getUserMedia","audio","createAnalyzerNode","audioContext","analyzer","createAnalyser","fftSize","smoothingTimeConstant","connectAudioStream","audioSrc","destination","connect"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/utils/audioUtils.ts"],"sourcesContent":["export function createAudioContext(): AudioContext {\n  return new AudioContext();\n}\n\nexport async function getAudioStream(): Promise<MediaStream> {\n  return await navigator.mediaDevices.getUserMedia({ audio: true });\n}\n\nexport function createAnalyzerNode(audioContext: AudioContext): AnalyserNode {\n  const analyzer = audioContext.createAnalyser();\n  analyzer.fftSize = 2048;\n  analyzer.smoothingTimeConstant = 0.8;\n  return analyzer;\n}\n\nexport function connectAudioStream(audioSrc: MediaStreamAudioSourceNode, analyzer: AnalyserNode, destination: AudioNode) {\n  audioSrc.connect(analyzer);\n  analyzer.connect(destination);\n}\n"],"mappings":"AAAA,OAAO,SAASA,kBAAkBA,CAAA,EAAiB;EACjD,OAAO,IAAIC,YAAY,EAAE;AAC3B;AAEA,OAAO,eAAeC,cAAcA,CAAA,EAAyB;EAC3D,OAAO,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC;AACnE;AAEA,OAAO,SAASC,kBAAkBA,CAACC,YAA0B,EAAgB;EAC3E,MAAMC,QAAQ,GAAGD,YAAY,CAACE,cAAc,EAAE;EAC9CD,QAAQ,CAACE,OAAO,GAAG,IAAI;EACvBF,QAAQ,CAACG,qBAAqB,GAAG,GAAG;EACpC,OAAOH,QAAQ;AACjB;AAEA,OAAO,SAASI,kBAAkBA,CAACC,QAAoC,EAAEL,QAAsB,EAAEM,WAAsB,EAAE;EACvHD,QAAQ,CAACE,OAAO,CAACP,QAAQ,CAAC;EAC1BA,QAAQ,CAACO,OAAO,CAACD,WAAW,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}