{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer2 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const analyser = useRef(null);\n  const dataArray = useRef(null);\n  let animationController;\n  let lastDrawTime = 0;\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        analyser.current.fftSize = 2048;\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n        dataArray.current = new Float32Array(analyser.current.fftSize);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current || !dataArray.current) {\n      return cancelAnimationFrame(animationController);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    analyser.current.getFloatTimeDomainData(dataArray.current);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = WIDTH * 1.0 / bufferLength;\n    let x = 0;\n    let y = HEIGHT / 2;\n    const now = performance.now();\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray.current[i];\n      const val = v * 0.5;\n      const yOffset = val * HEIGHT;\n      y = HEIGHT / 2 + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n    const timeElapsed = now - lastDrawTime;\n    if (timeElapsed > 16) {\n      lastDrawTime = now;\n      postMessage(\"draw\");\n    }\n  };\n  const handleWorkerMessage = e => {\n    if (e.data === \"draw\") {\n      visualizeData();\n    }\n  };\n  const startWorker = () => {\n    const worker = new Worker(\"worker.js\");\n    worker.addEventListener(\"message\", handleWorkerMessage);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAudioPlay,\n      children: \"begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWorker,\n      children: \"start worker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer2, \"lr1sAYHfXK4mnZWiEMhNwc5ur/o=\");\n_c = Visualizer2;\nexport default Visualizer2;\nvar _c;\n$RefreshReg$(_c, \"Visualizer2\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer2","_s","canvasRef","analyser","dataArray","animationController","lastDrawTime","handleAudioPlay","audioContext","AudioContext","current","stream","navigator","mediaDevices","getUserMedia","audio","audioSrc","createMediaStreamSource","createAnalyser","fftSize","connect","destination","Float32Array","error","console","visualizeData","window","requestAnimationFrame","cancelAnimationFrame","canvas","ctx","getContext","WIDTH","width","HEIGHT","height","bufferLength","frequencyBinCount","getFloatTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","y","now","performance","i","v","val","yOffset","moveTo","lineTo","stroke","timeElapsed","postMessage","handleWorkerMessage","e","data","startWorker","worker","Worker","addEventListener","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer2: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n  const dataArray = useRef<Float32Array | null>(null);\n\n  let animationController: number | null;\n  let lastDrawTime = 0;\n\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        analyser.current.fftSize = 2048;\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n        dataArray.current = new Float32Array(analyser.current.fftSize);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current || !dataArray.current) {\n      return cancelAnimationFrame(animationController!);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    analyser.current.getFloatTimeDomainData(dataArray.current);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = (WIDTH * 1.0) / bufferLength;\n    let x = 0;\n    let y = (HEIGHT / 2);\n    const now = performance.now();\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray.current[i];\n      const val = (v * 0.5);\n      const yOffset = (val * HEIGHT);\n      y = (HEIGHT / 2) + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n    const timeElapsed = now - lastDrawTime;\n    if (timeElapsed > 16) {\n      lastDrawTime = now;\n      postMessage(\"draw\");\n    }\n  };\n\n  const handleWorkerMessage = (e: MessageEvent) => {\n    if (e.data === \"draw\") {\n      visualizeData();\n    }\n  };\n\n  const startWorker = () => {\n    const worker = new Worker(\"worker.js\");\n    worker.addEventListener(\"message\", handleWorkerMessage);\n  };\n\n  return (\n    <>\n      <button onClick={handleAudioPlay}>begin</button>\n      <button onClick={startWorker}>start worker</button>\n      <canvas ref={canvasRef} width={500} height={500} />\n    </>\n  );\n};\n\nexport default Visualizer2;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}