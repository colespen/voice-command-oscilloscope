{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizer2 = () => {\n  _s();\n  const analyserCanvas = React.useRef(null);\n  const audioTest = async () => {\n    if (navigator.mediaDevices.getUserMedia !== null) {\n      const options = {\n        video: false,\n        audio: true\n      };\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(options);\n        const audioCtx = new AudioContext();\n        const analyser = audioCtx.createAnalyser();\n        analyser.fftSize = 2048;\n        const audioSrc = audioCtx.createMediaStreamSource(stream);\n        audioSrc.connect(analyser);\n        const data = new Uint8Array(analyser.frequencyBinCount);\n        const ctx = analyserCanvas.current.getContext(\"2d\");\n        const draw = dataParm => {\n          dataParm = [...dataParm];\n          ctx.fillStyle = \"white\"; //white background\n          ctx.lineWidth = 2; //width of candle/bar\n          ctx.strokeStyle = \"#d5d4d5\"; //color of candle/bar\n          const space = analyserCanvas.current.width / dataParm.length;\n          dataParm.forEach((value, i) => {\n            ctx.beginPath();\n            ctx.moveTo(space * i, analyserCanvas.current.height); //x,y\n            ctx.lineTo(space * i, analyserCanvas.current.height - value); //x,y\n            ctx.stroke();\n          });\n        };\n        const loopingFunction = () => {\n          requestAnimationFrame(loopingFunction);\n          analyser.getByteFrequencyData(data);\n          draw(data);\n        };\n        /* \"requestAnimationFrame\" requests the browser to execute the code during the next repaint cycle. This allows the system to optimize resources and frame-rate to reduce unnecessary reflow/repaint calls. */\n        requestAnimationFrame(loopingFunction);\n      } catch (err) {\n        // error handling\n      }\n    }\n  };\n  useE;\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: analyserCanvas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(Visualizer2, \"canFhNxDU4gBJGYBWuPA+5AHIyk=\");\n_c = Visualizer2;\nexport default Visualizer2;\nvar _c;\n$RefreshReg$(_c, \"Visualizer2\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Visualizer2","_s","analyserCanvas","useRef","audioTest","navigator","mediaDevices","getUserMedia","options","video","audio","stream","audioCtx","AudioContext","analyser","createAnalyser","fftSize","audioSrc","createMediaStreamSource","connect","data","Uint8Array","frequencyBinCount","ctx","current","getContext","draw","dataParm","fillStyle","lineWidth","strokeStyle","space","width","length","forEach","value","i","beginPath","moveTo","height","lineTo","stroke","loopingFunction","requestAnimationFrame","getByteFrequencyData","err","useE","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx"],"sourcesContent":["import React from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer2: React.FC = () => {\n  const analyserCanvas: any = React.useRef(null);\n\n  const audioTest = async () => {\n    if (navigator.mediaDevices.getUserMedia !== null) {\n      const options = {\n        video: false,\n        audio: true,\n      };\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(options);\n        const audioCtx = new AudioContext();\n        const analyser = audioCtx.createAnalyser();\n        analyser.fftSize = 2048;\n        const audioSrc = audioCtx.createMediaStreamSource(stream);\n        audioSrc.connect(analyser);\n        const data = new Uint8Array(analyser.frequencyBinCount);\n\n        const ctx = analyserCanvas.current.getContext(\"2d\");\n        const draw = (dataParm: any) => {\n          dataParm = [...dataParm];\n          ctx.fillStyle = \"white\"; //white background\n          ctx.lineWidth = 2; //width of candle/bar\n          ctx.strokeStyle = \"#d5d4d5\"; //color of candle/bar\n          const space = analyserCanvas.current.width / dataParm.length;\n\n          dataParm.forEach((value: number, i: number) => {\n            ctx.beginPath();\n            ctx.moveTo(space * i, analyserCanvas.current.height); //x,y\n            ctx.lineTo(space * i, analyserCanvas.current.height - value); //x,y\n            ctx.stroke();\n          });\n        };\n        const loopingFunction = () => {\n          requestAnimationFrame(loopingFunction);\n          analyser.getByteFrequencyData(data);\n          draw(data);\n        };\n        /* \"requestAnimationFrame\" requests the browser to execute the code during the next repaint cycle. This allows the system to optimize resources and frame-rate to reduce unnecessary reflow/repaint calls. */\n        requestAnimationFrame(loopingFunction);\n      } catch (err) {\n        // error handling\n      }\n    }\n  };\n\n  useE\n\n  return <canvas ref={analyserCanvas} />;\n};\n\nexport default Visualizer2;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,cAAmB,GAAGL,KAAK,CAACM,MAAM,CAAC,IAAI,CAAC;EAE9C,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,SAAS,CAACC,YAAY,CAACC,YAAY,KAAK,IAAI,EAAE;MAChD,MAAMC,OAAO,GAAG;QACdC,KAAK,EAAE,KAAK;QACZC,KAAK,EAAE;MACT,CAAC;MACD,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMN,SAAS,CAACC,YAAY,CAACC,YAAY,CAACC,OAAO,CAAC;QACjE,MAAMI,QAAQ,GAAG,IAAIC,YAAY,EAAE;QACnC,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,cAAc,EAAE;QAC1CD,QAAQ,CAACE,OAAO,GAAG,IAAI;QACvB,MAAMC,QAAQ,GAAGL,QAAQ,CAACM,uBAAuB,CAACP,MAAM,CAAC;QACzDM,QAAQ,CAACE,OAAO,CAACL,QAAQ,CAAC;QAC1B,MAAMM,IAAI,GAAG,IAAIC,UAAU,CAACP,QAAQ,CAACQ,iBAAiB,CAAC;QAEvD,MAAMC,GAAG,GAAGrB,cAAc,CAACsB,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;QACnD,MAAMC,IAAI,GAAIC,QAAa,IAAK;UAC9BA,QAAQ,GAAG,CAAC,GAAGA,QAAQ,CAAC;UACxBJ,GAAG,CAACK,SAAS,GAAG,OAAO,CAAC,CAAC;UACzBL,GAAG,CAACM,SAAS,GAAG,CAAC,CAAC,CAAC;UACnBN,GAAG,CAACO,WAAW,GAAG,SAAS,CAAC,CAAC;UAC7B,MAAMC,KAAK,GAAG7B,cAAc,CAACsB,OAAO,CAACQ,KAAK,GAAGL,QAAQ,CAACM,MAAM;UAE5DN,QAAQ,CAACO,OAAO,CAAC,CAACC,KAAa,EAAEC,CAAS,KAAK;YAC7Cb,GAAG,CAACc,SAAS,EAAE;YACfd,GAAG,CAACe,MAAM,CAACP,KAAK,GAAGK,CAAC,EAAElC,cAAc,CAACsB,OAAO,CAACe,MAAM,CAAC,CAAC,CAAC;YACtDhB,GAAG,CAACiB,MAAM,CAACT,KAAK,GAAGK,CAAC,EAAElC,cAAc,CAACsB,OAAO,CAACe,MAAM,GAAGJ,KAAK,CAAC,CAAC,CAAC;YAC9DZ,GAAG,CAACkB,MAAM,EAAE;UACd,CAAC,CAAC;QACJ,CAAC;QACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;UAC5BC,qBAAqB,CAACD,eAAe,CAAC;UACtC5B,QAAQ,CAAC8B,oBAAoB,CAACxB,IAAI,CAAC;UACnCM,IAAI,CAACN,IAAI,CAAC;QACZ,CAAC;QACD;QACAuB,qBAAqB,CAACD,eAAe,CAAC;MACxC,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZ;MAAA;IAEJ;EACF,CAAC;EAEDC,IAAI;EAEJ,oBAAO/C,OAAA;IAAQgD,GAAG,EAAE7C;EAAe;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACxC,CAAC;AAAClD,EAAA,CAjDID,WAAqB;AAAAoD,EAAA,GAArBpD,WAAqB;AAmD3B,eAAeA,WAAW;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}