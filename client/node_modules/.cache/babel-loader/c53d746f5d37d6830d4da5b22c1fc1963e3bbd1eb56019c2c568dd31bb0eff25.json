{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/client/src/components/VoiceBot.tsx\";\nimport React from \"react\";\nimport io from \"socket.io-client\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = \"http://127.0.0.1:8001\";\n//Temporary fix?\nconst socket = io(SERVER, {\n  transports: [\"websocket\"]\n});\nconst VoiceBot = () => {\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n  const startButton = document.querySelector(\"button\");\n  const microphone = document.querySelector(\".fa-microphone\");\n  const output = document.querySelector(\".output\");\n  const loading = document.querySelector(\".lds-ripple\");\n  recognition.lang = \"en-US\";\n  recognition.interimResults = false;\n  recognition.continuous = true;\n  let listening = false;\n  const start = () => {\n    botSpeak(\"Yo! What is good?!\");\n    recognition.start();\n    output.textContent = \"Listening ... \";\n    loading.classList.add(\"reveal\");\n    microphone.classList.add(\"hide\");\n  };\n  const stop = () => {\n    recognition.stop();\n    botSpeak(\"Thanks for dropping by!\");\n    output.textContent = \"Session ended\";\n    loading.classList.remove(\"reveal\");\n    microphone.classList.remove(\"hide\");\n  };\n  startButton.addEventListener(\"click\", () => {\n    listening ? stop() : start();\n    listening = !listening;\n  });\n  recognition.addEventListener(\"result\", e => {\n    //console.log(e.results); // e.results :SpeechRecognitionResult object\n    const last = e.results.length - 1;\n    const text = e.results[last][0].transcript;\n    socket.emit(\"user message\", text);\n  });\n  recognition.addEventListener(\"speechend\", () => {\n    listening ? stop() : null;\n    listening = !listening;\n  });\n  recognition.addEventListener(\"error\", e => {\n    console.log(e.error);\n    stop();\n  });\n\n  // receive message from server\n  const botSpeak = text => {\n    //  .speechSynthesis (returns obj --> entry point into Web Speech API)\n    const synth = window.speechSynthesis;\n    //                    SpeechSynthesisUtterance object --> Web Speech API\n    const utterance = new SpeechSynthesisUtterance(text);\n    synth.speak(utterance);\n    // Note: it's possible to have infinite loop if the bot message includes keywords\n  };\n\n  socket.on(\"bot message\", answer => {\n    const {\n      msg,\n      link\n    } = answer;\n    botSpeak(msg);\n    if (link) {\n      window.open(link, \"_blank\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n_c = VoiceBot;\nexport default VoiceBot;\nvar _c;\n$RefreshReg$(_c, \"VoiceBot\");","map":{"version":3,"names":["React","io","jsxDEV","_jsxDEV","SERVER","socket","transports","VoiceBot","SpeechRecognition","window","webkitSpeechRecognition","recognition","startButton","document","querySelector","microphone","output","loading","lang","interimResults","continuous","listening","start","botSpeak","textContent","classList","add","stop","remove","addEventListener","e","last","results","length","text","transcript","emit","console","log","error","synth","speechSynthesis","utterance","SpeechSynthesisUtterance","speak","on","answer","msg","link","open","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/client/src/components/VoiceBot.tsx"],"sourcesContent":["import React from \"react\";\nimport io from \"socket.io-client\";\n\nimport \"./index.css\";\n\nconst SERVER = \"http://127.0.0.1:8001\";\n//Temporary fix?\nconst socket = io(SERVER, {\n  transports: [\"websocket\"],\n});\n\nconst VoiceBot: React.FC = () => {\n\n  const SpeechRecognition: Sp =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nconst startButton = document.querySelector(\"button\");\nconst microphone = document.querySelector(\".fa-microphone\");\nconst output = document.querySelector(\".output\");\nconst loading = document.querySelector(\".lds-ripple\");\n\nrecognition.lang = \"en-US\";\nrecognition.interimResults = false;\nrecognition.continuous = true;\nlet listening = false;\n\nconst start = () => {\n  botSpeak(\"Yo! What is good?!\");\n  recognition.start();\n  output.textContent = \"Listening ... \";\n  loading.classList.add(\"reveal\");\n  microphone.classList.add(\"hide\");\n};\n\nconst stop = () => {\n  recognition.stop();\n  botSpeak(\"Thanks for dropping by!\");\n  output.textContent = \"Session ended\";\n  loading.classList.remove(\"reveal\");\n  microphone.classList.remove(\"hide\");\n};\n\nstartButton.addEventListener(\"click\", () => {\n  listening ? stop() : start();\n  listening = !listening;\n});\n\nrecognition.addEventListener(\"result\", (e) => {\n  //console.log(e.results); // e.results :SpeechRecognitionResult object\n  const last = e.results.length - 1;\n  const text = e.results[last][0].transcript;\n  socket.emit(\"user message\", text);\n});\n\nrecognition.addEventListener(\"speechend\", () => {\n  listening ? stop() : null;\n  listening = !listening;\n});\n\nrecognition.addEventListener(\"error\", (e) => {\n  console.log(e.error);\n  stop();\n});\n\n// receive message from server\nconst botSpeak = (text) => {\n  //  .speechSynthesis (returns obj --> entry point into Web Speech API)\n  const synth = window.speechSynthesis;\n  //                    SpeechSynthesisUtterance object --> Web Speech API\n  const utterance = new SpeechSynthesisUtterance(text);\n  synth.speak(utterance);\n  // Note: it's possible to have infinite loop if the bot message includes keywords\n};\n\nsocket.on(\"bot message\", (answer) => {\n  const { msg, link } = answer;\n  botSpeak(msg);\n  if (link) {\n    window.open(link, \"_blank\");\n  }\n});\n\n\n\n\n  return (\n  <button\n  // onClick={}\n  >\n\n  </button>)\n}\n\nexport default VoiceBot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}