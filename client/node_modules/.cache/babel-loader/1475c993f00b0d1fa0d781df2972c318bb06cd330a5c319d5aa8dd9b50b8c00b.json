{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useMemo, useEffect, useCallback } from \"react\";\nimport { createAudioContext, createAnalyzerNode, connectAudioStream, getAudioStream } from \"../utils/audioUtils\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizer2 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const analyser = useRef(null);\n  const handleAudioPlay = async () => {\n    const audioContext = createAudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await getAudioStream();\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = createAnalyzerNode(audioContext);\n        connectAudioStream(audioSrc, analyser.current, audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    worker.postMessage({\n      type: \"start\"\n    });\n  };\n  const handleAudioStop = () => {\n    worker.postMessage({\n      type: \"stop\"\n    });\n  };\n  const handleWorkerMessage = useCallback(event => {\n    const data = event.data;\n    if (data.type === \"draw\") {\n      const {\n        dataArray,\n        bufferLength,\n        sliceWidth\n      } = data;\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        return;\n      }\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        throw new Error(\"canvas context failed.\");\n      }\n      const WIDTH = canvas.width;\n      const HEIGHT = canvas.height;\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"green\";\n      ctx.beginPath();\n      let x = 0;\n      let y = HEIGHT / 2;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i];\n        const val = v * 0.5;\n        const yOffset = val * HEIGHT;\n        y = HEIGHT / 2 + yOffset;\n        if (i === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n        x += sliceWidth;\n      }\n      ctx.stroke();\n    } else if (data.type === \"error\") {\n      console.error(data.error);\n    }\n  }, []);\n  const worker = useMemo(() => {\n    const worker = new Worker(new URL(\"../worker/drawer.ts\", import.meta.url));\n    worker.onerror = error => error;\n    return worker;\n  }, []);\n\n  // onmessage - recieve from getData worker\n  useEffect(() => {\n    if (window.Worker) {\n      worker.onmessage = e => {\n        handleWorkerMessage(e);\n      };\n    }\n    return () => {\n      worker.terminate();\n    };\n  }, [worker, handleWorkerMessage]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        const rect = canvas.getBoundingClientRect();\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n        ctx.canvas.width = rect.width;\n        ctx.canvas.height = rect.height;\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAudioPlay,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAudioStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Visualizer2, \"0kDkt/uCC/Gu5ei678kAi0iaCqg=\");\n_c = Visualizer2;\nexport default Visualizer2;\nvar _c;\n$RefreshReg$(_c, \"Visualizer2\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useCallback","createAudioContext","createAnalyzerNode","connectAudioStream","getAudioStream","jsxDEV","_jsxDEV","Visualizer2","_s","canvasRef","analyser","handleAudioPlay","audioContext","current","stream","audioSrc","createMediaStreamSource","destination","error","console","worker","postMessage","type","handleAudioStop","handleWorkerMessage","event","data","dataArray","bufferLength","sliceWidth","canvas","ctx","getContext","Error","WIDTH","width","HEIGHT","height","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","x","y","i","v","val","yOffset","moveTo","lineTo","stroke","Worker","URL","import","meta","url","onerror","window","onmessage","e","terminate","rect","getBoundingClientRect","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx"],"sourcesContent":["import React, { useRef, useMemo, useEffect, useCallback } from \"react\";\nimport {\n  createAudioContext,\n  createAnalyzerNode,\n  connectAudioStream,\n  getAudioStream,\n} from \"../utils/audioUtils\";\n\nimport \"./index.css\";\n\nconst Visualizer2: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n\n  const handleAudioPlay = async () => {\n    const audioContext = createAudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await getAudioStream();\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = createAnalyzerNode(audioContext);\n        connectAudioStream(\n          audioSrc,\n          analyser.current,\n          audioContext.destination\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    worker.postMessage({ type: \"start\" });\n  };\n\n  const handleAudioStop = () => {\n    worker.postMessage({ type: \"stop\" });\n  };\n\n  const handleWorkerMessage = useCallback((event: MessageEvent) => {\n    const data = event.data;\n    if (data.type === \"draw\") {\n      const { dataArray, bufferLength, sliceWidth } = data;\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        return;\n      }\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        throw new Error(\"canvas context failed.\");\n      }\n      const WIDTH = canvas.width;\n      const HEIGHT = canvas.height;\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"green\";\n      ctx.beginPath();\n      let x = 0;\n      let y = HEIGHT / 2;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i];\n        const val = v * 0.5;\n        const yOffset = val * HEIGHT;\n        y = HEIGHT / 2 + yOffset;\n        if (i === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n        x += sliceWidth;\n      }\n      ctx.stroke();\n    } else if (data.type === \"error\") {\n      console.error(data.error);\n    }\n  }, []);\n\n  const worker: Worker = useMemo(() => {\n    const worker = new Worker(new URL(\"../worker/drawer.ts\", import.meta.url));\n    worker.onerror = (error) => error;\n    return worker;\n  }, []);\n\n  // onmessage - recieve from getData worker\n  useEffect(() => {\n    if (window.Worker) {\n      worker.onmessage = (e: MessageEvent) => {\n        handleWorkerMessage(e)\n      };\n    }\n    return () => {\n      worker.terminate();\n    };\n  }, [worker, handleWorkerMessage]);\n  \n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        const rect = canvas.getBoundingClientRect();\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n        ctx.canvas.width = rect.width;\n        ctx.canvas.height = rect.height;\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <canvas ref={canvasRef} width=\"400\" />\n      <div className=\"controls\">\n        <button onClick={handleAudioPlay}>Play</button>\n        <button onClick={handleAudioStop}>Stop</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Visualizer2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}