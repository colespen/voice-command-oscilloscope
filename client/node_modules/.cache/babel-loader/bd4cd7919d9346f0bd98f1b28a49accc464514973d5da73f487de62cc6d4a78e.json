{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer2 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const analyser = useRef(null);\n  const worker = useRef(null);\n  let animationController;\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n        // Initialize worker\n        worker.current = new Worker(\"visualizer-worker.js\");\n        worker.current.postMessage({\n          type: \"init\",\n          bufferLength: analyser.current.frequencyBinCount\n        });\n        worker.current.onmessage = _ref => {\n          let {\n            data\n          } = _ref;\n          if (data.type === \"draw\") {\n            draw(data.dataArray);\n          }\n        };\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current || !worker.current) {\n      return cancelAnimationFrame(animationController);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyser.current.getFloatTimeDomainData(dataArray);\n    worker.current.postMessage({\n      type: \"compute\",\n      dataArray\n    });\n  };\n  const draw = dataArray => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = WIDTH * 1.0 / dataArray.length;\n    let x = 0;\n    let y = HEIGHT / 2;\n    for (let i = 0; i < dataArray.length; i++) {\n      const v = dataArray[i];\n      const val = v * 0.5;\n      const yOffset = val * HEIGHT;\n      y = HEIGHT / 2 + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAudioPlay,\n      children: \"begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer2, \"nyFkHRtTMcIiDbNnxYPMWhsTUhA=\");\n_c = Visualizer2;\nexport default Visualizer4;\nvar _c;\n$RefreshReg$(_c, \"Visualizer2\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer2","_s","canvasRef","analyser","worker","animationController","handleAudioPlay","audioContext","AudioContext","current","stream","navigator","mediaDevices","getUserMedia","audio","audioSrc","createMediaStreamSource","createAnalyser","connect","destination","Worker","postMessage","type","bufferLength","frequencyBinCount","onmessage","_ref","data","draw","dataArray","error","console","visualizeData","window","requestAnimationFrame","cancelAnimationFrame","canvas","WIDTH","width","HEIGHT","height","Float32Array","getFloatTimeDomainData","ctx","getContext","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","length","x","y","i","v","val","yOffset","moveTo","lineTo","stroke","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","Visualizer4","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer2: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n  const worker = useRef<Worker | null>(null);\n\n  let animationController: number | null;\n\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n        // Initialize worker\n        worker.current = new Worker(\"visualizer-worker.js\");\n        worker.current.postMessage({ type: \"init\", bufferLength: analyser.current.frequencyBinCount });\n        worker.current.onmessage = ({ data }) => {\n          if (data.type === \"draw\") {\n            draw(data.dataArray);\n          }\n        };\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current || !worker.current) {\n      return cancelAnimationFrame(animationController!);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyser.current.getFloatTimeDomainData(dataArray);\n    worker.current.postMessage({ type: \"compute\", dataArray });\n  };\n\n  const draw = (dataArray: Float32Array) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = (WIDTH * 1.0) / dataArray.length;\n    let x = 0;\n    let y = (HEIGHT / 2);\n    for (let i = 0; i < dataArray.length; i++) {\n      const v = dataArray[i];\n      const val = (v * 0.5);\n      const yOffset = (val * HEIGHT);\n      y = (HEIGHT / 2) + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n  };\n\n  return (\n    <>\n      <button onClick={handleAudioPlay}>begin</button>\n      <canvas ref={canvasRef} width={500} height={500} />\n    </>\n  );\n};\n\nexport default Visualizer4;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}