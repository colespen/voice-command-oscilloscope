{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer3 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const audioRef = useRef(null);\n  const source = useRef(null);\n  const analyser = useRef(null);\n  const animationController = useRef(null);\n  const audioContext = useRef(new AudioContext());\n  const handleAudioPlay = async () => {\n    // if (!audioRef.current) return;\n    if (!source.current || !analyser.current) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const audioSrc = audioContext.current.createMediaStreamSource(stream);\n        analyser.current = audioContext.current.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.current.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n  const visualizeData = () => {\n    var _audioRef$current, _analyser$current;\n    animationController.current = window.requestAnimationFrame(visualizeData);\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      return cancelAnimationFrame(animationController);\n    }\n    const songData = new Uint8Array(analyser.current.frequencyBinCount);\n    (_analyser$current = analyser.current) === null || _analyser$current === void 0 ? void 0 : _analyser$current.getByteTimeDomainData(songData);\n\n    // Perform rolling average\n    const averagingConstant = 0.85;\n    let lastAverage = 0;\n    for (let i = 0; i < songData.length; i++) {\n      const value = (songData[i] - 128) / 128;\n      const average = lastAverage * averagingConstant + value * (1 - averagingConstant);\n      songData[i] = Math.round((average + 1) * 128);\n      lastAverage = average;\n    }\n    const bar_width = 3;\n    let start = 0;\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < songData.length; i++) {\n        // compute x coordinate where we would draw\n        start = i * 4;\n        //create a gradient for the  whole canvas\n        let gradient = ctx === null || ctx === void 0 ? void 0 : ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(0.2, \"#2392f5\");\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(0.5, \"#fe0095\");\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(1.0, \"purple\");\n        ctx.fillStyle = gradient;\n        ctx.fillRect(start, canvas.height / 2 + songData[i] / 2, bar_width, 1);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAudioPlay,\n      children: \"begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer3, \"RMX1o9KXjbfCyNHFZAR+g325HcU=\");\n_c = Visualizer3;\nexport default Visualizer3;\nvar _c;\n$RefreshReg$(_c, \"Visualizer3\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer3","_s","canvasRef","audioRef","source","analyser","animationController","audioContext","AudioContext","handleAudioPlay","current","stream","navigator","mediaDevices","getUserMedia","audio","audioSrc","createMediaStreamSource","createAnalyser","connect","destination","error","console","visualizeData","_audioRef$current","_analyser$current","window","requestAnimationFrame","paused","cancelAnimationFrame","songData","Uint8Array","frequencyBinCount","getByteTimeDomainData","averagingConstant","lastAverage","i","length","value","average","Math","round","bar_width","start","canvas","ctx","getContext","clearRect","width","height","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer3: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const source = useRef<MediaElementAudioSourceNode | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n  const animationController = useRef<number | null>(null);\n  const audioContext = useRef<AudioContext>(new AudioContext());\n\n  const handleAudioPlay = async () => {\n    // if (!audioRef.current) return;\n    if (!source.current || !analyser.current) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioSrc = audioContext.current.createMediaStreamSource(stream);\n        analyser.current = audioContext.current.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.current.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  const visualizeData = () => {\n    animationController.current = window.requestAnimationFrame(visualizeData);\n    if (audioRef.current?.paused) {\n      return cancelAnimationFrame(animationController);\n    }\n  \n    const songData = new Uint8Array(analyser.current!.frequencyBinCount);\n    analyser.current?.getByteTimeDomainData(songData);\n  \n    // Perform rolling average\n    const averagingConstant = 0.85;\n    let lastAverage = 0;\n    for (let i = 0; i < songData.length; i++) {\n      const value = (songData[i] - 128) / 128;\n      const average = lastAverage * averagingConstant + value * (1 - averagingConstant);\n      songData[i] = Math.round((average + 1) * 128);\n      lastAverage = average;\n    }\n  \n    const bar_width = 3;\n    let start = 0;\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx?.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < songData.length; i++) {\n        // compute x coordinate where we would draw\n        start = i * 4;\n        //create a gradient for the  whole canvas\n        let gradient = ctx?.createLinearGradient(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        gradient?.addColorStop(0.2, \"#2392f5\");\n        gradient?.addColorStop(0.5, \"#fe0095\");\n        gradient?.addColorStop(1.0, \"purple\");\n        (ctx as CanvasRenderingContext2D).fillStyle = gradient!;\n        (ctx as CanvasRenderingContext2D).fillRect(\n          start,\n          canvas.height / 2 + songData[i] / 2,\n          bar_width,\n          1\n        );\n      }\n    }\n  };\n  \n\n  return (\n    <>\n      <button onClick={handleAudioPlay}>begin</button>\n      <canvas ref={canvasRef} />\n    </>\n  );\n};\n\n\nexport default Visualizer3;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}