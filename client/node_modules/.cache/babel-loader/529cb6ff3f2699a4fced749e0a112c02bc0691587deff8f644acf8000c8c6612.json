{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer3 = () => {\n  _s();\n  // const [file, setFile] = useState<File | null>(null);\n  const canvasRef = useRef(null);\n  const audioRef = useRef(null);\n  const source = useRef(null);\n  const analyser = useRef(null);\n  let animationController;\n  const handleAudioPlay = async () => {\n    // if (!audioRef.current) return;\n    const audioContext = new AudioContext();\n    if (!source.current || !analyser.current) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n  const visualizeData = () => {\n    var _audioRef$current, _analyser$current;\n    animationController = window.requestAnimationFrame(visualizeData);\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      return cancelAnimationFrame(animationController);\n    }\n    const songData = new Uint8Array(140);\n    (_analyser$current = analyser.current) === null || _analyser$current === void 0 ? void 0 : _analyser$current.getByteFrequencyData(songData);\n    const bar_width = 3;\n    let start = 0;\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < songData.length; i++) {\n        // compute x coordinate where we would draw\n        start = i * 4;\n        //create a gradient for the  whole canvas\n        let gradient = ctx === null || ctx === void 0 ? void 0 : ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(0.2, \"#2392f5\");\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(0.5, \"#fe0095\");\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(1.0, \"purple\");\n        ctx.fillStyle = gradient;\n        ctx.fillRect(start, canvas.height, bar_width, -songData[i]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAudioPlay,\n      children: \"begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer3, \"FphiVivQhVdAMkB6Ae6lxZauRak=\");\n_c = Visualizer3;\nexport default Visualizer3;\nvar _c;\n$RefreshReg$(_c, \"Visualizer3\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer3","_s","canvasRef","audioRef","source","analyser","animationController","handleAudioPlay","audioContext","AudioContext","current","stream","navigator","mediaDevices","getUserMedia","audio","audioSrc","createMediaStreamSource","createAnalyser","connect","destination","error","console","visualizeData","_audioRef$current","_analyser$current","window","requestAnimationFrame","paused","cancelAnimationFrame","songData","Uint8Array","getByteFrequencyData","bar_width","start","canvas","ctx","getContext","clearRect","width","height","i","length","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer3: React.FC = () => {\n  // const [file, setFile] = useState<File | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const source = useRef<MediaElementAudioSourceNode | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n\n  let animationController: number | null;\n\n  const handleAudioPlay = async () => {\n    // if (!audioRef.current) return;\n    const audioContext = new AudioContext();\n    if (!source.current || !analyser.current) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (audioRef.current?.paused) {\n      return cancelAnimationFrame(animationController);\n    }\n    const songData = new Uint8Array(140);\n    analyser.current?.getByteFrequencyData(songData);\n    const bar_width = 3;\n    let start = 0;\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx?.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < songData.length; i++) {\n        // compute x coordinate where we would draw\n        start = i * 4;\n        //create a gradient for the  whole canvas\n        let gradient = ctx?.createLinearGradient(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        gradient?.addColorStop(0.2, \"#2392f5\");\n        gradient?.addColorStop(0.5, \"#fe0095\");\n        gradient?.addColorStop(1.0, \"purple\");\n        (ctx as CanvasRenderingContext2D).fillStyle = gradient!;\n        (ctx as CanvasRenderingContext2D).fillRect(\n          start,\n          canvas.height,\n          bar_width,\n          -songData[i]\n        );\n      }\n    }\n  };\n\n  return (\n    <>\n      {/* <input\n        type=\"file\"\n        onChange={({ target: { files } }) =>\n          files && files[0] && setFile(files[0])\n        }\n      />\n      {file && (\n        <audio\n          ref={audioRef}\n          onPlay={handleAudioPlay}\n          src={window.URL.createObjectURL(file)}\n          controls\n        />\n      )} */}\n      <button onClick={handleAudioPlay}>begin</button>\n      <canvas ref={canvasRef} />\n    </>\n  );\n};\n\nexport default Visualizer3;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}