{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer3 = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const canvasRef = useRef(null);\n  const audioRef = useRef(null);\n  const source = useRef(null);\n  const analyser = useRef(null);\n  let animationController;\n  const handleAudioPlay = () => {\n    if (audioRef.current) return;\n    let audioContext = new AudioContext();\n    if (!source.current || !analyser.current) {\n      source.current = audioContext.createMediaElementSource(audioRef.current);\n      analyser.current = audioContext.createAnalyser();\n      source.current.connect(analyser.current);\n      analyser.current.connect(audioContext.destination);\n    }\n    visualizeData();\n  };\n  const visualizeData = () => {\n    var _audioRef$current, _analyser$current;\n    animationController = window.requestAnimationFrame(visualizeData);\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      return cancelAnimationFrame(animationController);\n    }\n    const songData = new Uint8Array(140);\n    (_analyser$current = analyser.current) === null || _analyser$current === void 0 ? void 0 : _analyser$current.getByteFrequencyData(songData);\n    const bar_width = 3;\n    let start = 0;\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < songData.length; i++) {\n        // compute x coordinate where we would draw\n        start = i * 4;\n        //create a gradient for the  whole canvas\n        let gradient = ctx === null || ctx === void 0 ? void 0 : ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(0.2, \"#2392f5\");\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(0.5, \"#fe0095\");\n        gradient === null || gradient === void 0 ? void 0 : gradient.addColorStop(1.0, \"purple\");\n        ctx.fillStyle = gradient;\n        ctx.fillRect(start, canvas.height, bar_width, -songData[i]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: _ref => {\n        let {\n          target: {\n            files\n          }\n        } = _ref;\n        return files && files[0] && setFile(files[0]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onPlay: handleAudioPlay,\n      src: window.URL.createObjectURL(file),\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer3, \"UPAApclxkj7bF4ca+tg39o7ztZo=\");\n_c = Visualizer3;\nexport default Visualizer3;\nvar _c;\n$RefreshReg$(_c, \"Visualizer3\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer3","_s","file","setFile","canvasRef","audioRef","source","analyser","animationController","handleAudioPlay","current","audioContext","AudioContext","createMediaElementSource","createAnalyser","connect","destination","visualizeData","_audioRef$current","_analyser$current","window","requestAnimationFrame","paused","cancelAnimationFrame","songData","Uint8Array","getByteFrequencyData","bar_width","start","canvas","ctx","getContext","clearRect","width","height","i","length","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","children","type","onChange","_ref","target","files","fileName","_jsxFileName","lineNumber","columnNumber","ref","onPlay","src","URL","createObjectURL","controls","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer3: React.FC = () => {\n  const [file, setFile] = useState<File | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const source = useRef<MediaElementAudioSourceNode | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n\n  let animationController: number | null;\n\n  const handleAudioPlay = () => {\n    if (audioRef.current) return;\n    let audioContext = new AudioContext();\n    if (!source.current || !analyser.current) {\n      source.current = audioContext.createMediaElementSource(audioRef.current);\n      analyser.current = audioContext.createAnalyser();\n      source.current.connect(analyser.current);\n      analyser.current.connect(audioContext.destination);\n    }\n    visualizeData();\n  };\n\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (audioRef.current?.paused) {\n      return cancelAnimationFrame(animationController);\n    }\n    const songData = new Uint8Array(140);\n    analyser.current?.getByteFrequencyData(songData);\n    const bar_width = 3;\n    let start = 0;\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx?.clearRect(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < songData.length; i++) {\n        // compute x coordinate where we would draw\n        start = i * 4;\n        //create a gradient for the  whole canvas\n        let gradient = ctx?.createLinearGradient(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        gradient?.addColorStop(0.2, \"#2392f5\");\n        gradient?.addColorStop(0.5, \"#fe0095\");\n        gradient?.addColorStop(1.0, \"purple\");\n        (ctx as CanvasRenderingContext2D).fillStyle = gradient!;\n        (ctx as CanvasRenderingContext2D).fillRect(\n          start,\n          canvas.height,\n          bar_width,\n          -songData[i]\n        );\n      }\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        onChange={({ target: { files } }) =>\n          files && files[0] && setFile(files[0])\n        }\n      />\n      {file && (\n        <audio\n          ref={audioRef}\n          onPlay={handleAudioPlay}\n          src={window.URL.createObjectURL(file)}\n          controls\n        />\n      )}\n      <canvas ref={canvasRef} width={500} height={200} />\n    </>\n  );\n};\n\nexport default Visualizer3;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}