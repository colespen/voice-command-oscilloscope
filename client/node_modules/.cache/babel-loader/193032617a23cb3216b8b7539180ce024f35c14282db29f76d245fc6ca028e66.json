{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizer = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [worker, setWorker] = useState(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    let requestId;\n    const handleMessage = e => {\n      const message = e.data;\n      switch (message.type) {\n        case \"data\":\n          setData(message.payload);\n          break;\n        case \"error\":\n          setError(message.payload);\n          break;\n        case \"done\":\n          setLoading(false);\n          cancelAnimationFrame(requestId);\n          break;\n        default:\n          break;\n      }\n    };\n    const initWorker = () => {\n      const newWorker = new Worker(\"./worker.js\");\n      newWorker.addEventListener(\"message\", handleMessage);\n      setWorker(newWorker);\n    };\n    if (!worker) {\n      initWorker();\n    }\n    return () => {\n      if (worker) {\n        worker.removeEventListener(\"message\", handleMessage);\n        worker.terminate();\n      }\n    };\n  }, [worker]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const render = () => {\n      requestId = requestAnimationFrame(render);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const barWidth = 10;\n      const barMargin = 5;\n      const maxBarHeight = canvas.height - 20;\n      const maxValue = Math.max(...data);\n      ctx.fillStyle = \"blue\";\n      for (let i = 0; i < data.length; i++) {\n        const barHeight = data[i] / maxValue * maxBarHeight;\n        const x = i * (barWidth + barMargin);\n        const y = canvas.height - barHeight - 10;\n        ctx.fillRect(x, y, barWidth, barHeight);\n      }\n    };\n    if (data.length > 0 && !loading && !error) {\n      requestId = requestAnimationFrame(render);\n    }\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  }, [data, loading, error]);\n  const handleStart = () => {\n    setLoading(true);\n    setData([]);\n    setError(null);\n    worker.postMessage({\n      type: \"start\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Visualizer, \"IqkqpzwQNt3FnU6zGYaiUPsvEuk=\");\n_c = Visualizer;\nexport default Visualizer;\nvar _c;\n$RefreshReg$(_c, \"Visualizer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Visualizer","_s","data","setData","loading","setLoading","error","setError","worker","setWorker","canvasRef","canvas","current","ctx","getContext","requestId","handleMessage","e","message","type","payload","cancelAnimationFrame","initWorker","newWorker","Worker","addEventListener","removeEventListener","terminate","render","requestAnimationFrame","clearRect","width","height","barWidth","barMargin","maxBarHeight","maxValue","Math","max","fillStyle","i","length","barHeight","x","y","fillRect","handleStart","postMessage","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer2.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Visualizer = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [worker, setWorker] = useState(null);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    let requestId;\n\n    const handleMessage = (e) => {\n      const message = e.data;\n      switch (message.type) {\n        case \"data\":\n          setData(message.payload);\n          break;\n        case \"error\":\n          setError(message.payload);\n          break;\n        case \"done\":\n          setLoading(false);\n          cancelAnimationFrame(requestId);\n          break;\n        default:\n          break;\n      }\n    };\n\n    const initWorker = () => {\n      const newWorker = new Worker(\"./worker.js\");\n      newWorker.addEventListener(\"message\", handleMessage);\n      setWorker(newWorker);\n    };\n\n    if (!worker) {\n      initWorker();\n    }\n\n    return () => {\n      if (worker) {\n        worker.removeEventListener(\"message\", handleMessage);\n        worker.terminate();\n      }\n    };\n  }, [worker]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const render = () => {\n      requestId = requestAnimationFrame(render);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      const barWidth = 10;\n      const barMargin = 5;\n      const maxBarHeight = canvas.height - 20;\n      const maxValue = Math.max(...data);\n\n      ctx.fillStyle = \"blue\";\n\n      for (let i = 0; i < data.length; i++) {\n        const barHeight = (data[i] / maxValue) * maxBarHeight;\n        const x = i * (barWidth + barMargin);\n        const y = canvas.height - barHeight - 10;\n        ctx.fillRect(x, y, barWidth, barHeight);\n      }\n    };\n\n    if (data.length > 0 && !loading && !error) {\n      requestId = requestAnimationFrame(render);\n    }\n\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  }, [data, loading, error]);\n\n  const handleStart = () => {\n    setLoading(true);\n    setData([]);\n    setError(null);\n    worker.postMessage({ type: \"start\" });\n  };\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={500} height={500} />\n      {loading && <div>Loading...</div>}\n      {error && <div>Error: {error}</div>}\n      <button onClick={handleStart}>Start</button>\n    </div>\n  );\n};\n\nexport default Visualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}