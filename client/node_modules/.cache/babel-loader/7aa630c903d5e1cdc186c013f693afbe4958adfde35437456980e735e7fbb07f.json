{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer3 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const analyser = useRef(null);\n  let animationController;\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n  const visualizeData = () => {\n    var _canvas$getContext;\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current) {\n      return cancelAnimationFrame(animationController);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = (_canvas$getContext = canvas.getContext(\"2d\")) === null || _canvas$getContext === void 0 ? void 0 : _canvas$getContext.imageSmoothingEnabled;\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyser.current.getFloatTimeDomainData(dataArray);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = WIDTH * 1.0 / bufferLength;\n    let x = 0;\n    let y = HEIGHT / 2;\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i];\n      const val = v * 0.5;\n      const yOffset = val * HEIGHT;\n      y = HEIGHT / 2 + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAudioPlay,\n      children: \"begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer3, \"DSRoxuhGOrHpaDRjf4bhnl6dc5A=\");\n_c = Visualizer3;\nexport default Visualizer3;\nvar _c;\n$RefreshReg$(_c, \"Visualizer3\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer3","_s","canvasRef","analyser","animationController","handleAudioPlay","audioContext","AudioContext","current","stream","navigator","mediaDevices","getUserMedia","audio","audioSrc","createMediaStreamSource","createAnalyser","connect","destination","error","console","visualizeData","_canvas$getContext","window","requestAnimationFrame","cancelAnimationFrame","canvas","ctx","getContext","imageSmoothingEnabled","WIDTH","width","HEIGHT","height","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","y","i","v","val","yOffset","moveTo","lineTo","stroke","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer3.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer3: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n\n  let animationController: number | null;\n\n  const handleAudioPlay = async () => {\n    const audioContext = new AudioContext();\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        analyser.current.connect(audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current) {\n      return cancelAnimationFrame(animationController!);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\")?.imageSmoothingEnabled;\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyser.current.getFloatTimeDomainData(dataArray);\n    ctx.fillStyle! = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = (WIDTH * 1.0) / bufferLength;\n    let x = 0;\n    let y = (HEIGHT / 2);\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i];\n      const val = (v * 0.5);\n      const yOffset = (val * HEIGHT);\n      y = (HEIGHT / 2) + yOffset;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.stroke();\n  };\n\n  return (\n    <>\n      <button onClick={handleAudioPlay}>begin</button>\n      <canvas ref={canvasRef} width={500} height={500} />\n    </>\n  );\n};\n\nexport default Visualizer3;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}