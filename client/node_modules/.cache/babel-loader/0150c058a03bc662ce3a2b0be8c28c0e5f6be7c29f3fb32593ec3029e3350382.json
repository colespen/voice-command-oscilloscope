{"ast":null,"code":"var _jsxFileName = \"/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Visualizer4 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const analyser = useRef(null);\n  let animationController;\n  const handleAudioPlay = async () => {\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input  - WORKS!!\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const audioContext = new AudioContext();\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        // analyser.current.connect(audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current) {\n      return cancelAnimationFrame(animationController);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    analyser.current.getByteTimeDomainData(dataArray);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = WIDTH * 1.0 / bufferLength;\n    let x = 0;\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i] / 128.0;\n      const y = v * HEIGHT / 2;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAudioPlay,\n      children: \"begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Visualizer4, \"DSRoxuhGOrHpaDRjf4bhnl6dc5A=\");\n_c = Visualizer4;\nexport default Visualizer4;\nvar _c;\n$RefreshReg$(_c, \"Visualizer4\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer4","_s","canvasRef","analyser","animationController","handleAudioPlay","current","stream","navigator","mediaDevices","getUserMedia","audio","audioContext","AudioContext","audioSrc","createMediaStreamSource","createAnalyser","connect","error","console","visualizeData","window","requestAnimationFrame","cancelAnimationFrame","canvas","ctx","getContext","WIDTH","width","HEIGHT","height","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/beluga/Documents/Dev/React/audio_visualizer/src/components/Visualizer4.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nimport \"./index.css\";\n\nconst Visualizer4: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const analyser = useRef<AnalyserNode | null>(null);\n\n  let animationController: number | null;\n\n  const handleAudioPlay = async () => {\n    if (!analyser.current) {\n      try {\n        // Get audio stream from mic input  - WORKS!!\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioContext = new AudioContext();\n        const audioSrc = audioContext.createMediaStreamSource(stream);\n        analyser.current = audioContext.createAnalyser();\n        audioSrc.connect(analyser.current);\n        // analyser.current.connect(audioContext.destination);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    visualizeData();\n  };\n\n  const visualizeData = () => {\n    animationController = window.requestAnimationFrame(visualizeData);\n    if (!analyser.current) {\n      return cancelAnimationFrame(animationController!);\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const bufferLength = analyser.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    analyser.current.getByteTimeDomainData(dataArray);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"green\";\n    ctx.beginPath();\n    const sliceWidth = (WIDTH * 1.0) / bufferLength;\n    let x = 0;\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i] / 128.0;\n      const y = (v * HEIGHT) / 2;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke();\n  };\n\n  return (\n    <>\n      <button onClick={handleAudioPlay}>begin</button>\n      <canvas ref={canvasRef} width={500} height={500} />\n    </>\n  );\n};\n\nexport default Visualizer4;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAErC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,SAAS,GAAGP,MAAM,CAA2B,IAAI,CAAC;EACxD,MAAMQ,QAAQ,GAAGR,MAAM,CAAsB,IAAI,CAAC;EAElD,IAAIS,mBAAkC;EAEtC,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACF,QAAQ,CAACG,OAAO,EAAE;MACrB,IAAI;QACF;QACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,MAAMC,YAAY,GAAG,IAAIC,YAAY,EAAE;QACvC,MAAMC,QAAQ,GAAGF,YAAY,CAACG,uBAAuB,CAACR,MAAM,CAAC;QAC7DJ,QAAQ,CAACG,OAAO,GAAGM,YAAY,CAACI,cAAc,EAAE;QAChDF,QAAQ,CAACG,OAAO,CAACd,QAAQ,CAACG,OAAO,CAAC;QAClC;MACF,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;IACAE,aAAa,EAAE;EACjB,CAAC;EAED,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1BhB,mBAAmB,GAAGiB,MAAM,CAACC,qBAAqB,CAACF,aAAa,CAAC;IACjE,IAAI,CAACjB,QAAQ,CAACG,OAAO,EAAE;MACrB,OAAOiB,oBAAoB,CAACnB,mBAAmB,CAAE;IACnD;IACA,MAAMoB,MAAM,GAAGtB,SAAS,CAACI,OAAO;IAChC,IAAI,CAACkB,MAAM,EAAE;MACX;IACF;IACA,MAAMC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,IAAI,CAACD,GAAG,EAAE;MACR;IACF;IACA,MAAME,KAAK,GAAGH,MAAM,CAACI,KAAK;IAC1B,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAM;IAC5B,MAAMC,YAAY,GAAG5B,QAAQ,CAACG,OAAO,CAAC0B,iBAAiB;IACvD,MAAMC,SAAS,GAAG,IAAIC,UAAU,CAACH,YAAY,CAAC;IAC9C5B,QAAQ,CAACG,OAAO,CAAC6B,qBAAqB,CAACF,SAAS,CAAC;IACjDR,GAAG,CAACW,SAAS,GAAG,OAAO;IACvBX,GAAG,CAACY,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEV,KAAK,EAAEE,MAAM,CAAC;IACjCJ,GAAG,CAACa,SAAS,GAAG,CAAC;IACjBb,GAAG,CAACc,WAAW,GAAG,OAAO;IACzBd,GAAG,CAACe,SAAS,EAAE;IACf,MAAMC,UAAU,GAAId,KAAK,GAAG,GAAG,GAAII,YAAY;IAC/C,IAAIW,CAAC,GAAG,CAAC;IACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,YAAY,EAAEY,CAAC,EAAE,EAAE;MACrC,MAAMC,CAAC,GAAGX,SAAS,CAACU,CAAC,CAAC,GAAG,KAAK;MAC9B,MAAME,CAAC,GAAID,CAAC,GAAGf,MAAM,GAAI,CAAC;MAC1B,IAAIc,CAAC,KAAK,CAAC,EAAE;QACXlB,GAAG,CAACqB,MAAM,CAACJ,CAAC,EAAEG,CAAC,CAAC;MAClB,CAAC,MAAM;QACLpB,GAAG,CAACsB,MAAM,CAACL,CAAC,EAAEG,CAAC,CAAC;MAClB;MACAH,CAAC,IAAID,UAAU;IACjB;IACAhB,GAAG,CAACsB,MAAM,CAACvB,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACM,MAAM,GAAG,CAAC,CAAC;IAC3CL,GAAG,CAACuB,MAAM,EAAE;EACd,CAAC;EAED,oBACEnD,OAAA,CAAAE,SAAA;IAAAkD,QAAA,gBACEpD,OAAA;MAAQqD,OAAO,EAAE7C,eAAgB;MAAA4C,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAChDzD,OAAA;MAAQ0D,GAAG,EAAErD,SAAU;MAAC0B,KAAK,EAAE,GAAI;MAACE,MAAM,EAAE;IAAI;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAClD;AAEP,CAAC;AAACrD,EAAA,CApEID,WAAqB;AAAAwD,EAAA,GAArBxD,WAAqB;AAsE3B,eAAeA,WAAW;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}